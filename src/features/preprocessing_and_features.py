# -*- coding: utf-8 -*-
"""02_preprocessing_and_features.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rUag4uDc8ZIL6dY1fO7byKkRQsWHR-gP
"""

import pandas as pd

# Commented out IPython magic to ensure Python compatibility.
# %load_ext autoreload
# %autoreload 2

import sys
sys.path.append("..")

from data.import_dataset import load_data

numeric_feat = [
    "pickup_weekday",
    "pickup_hour",
    'work_hours',
    "pickup_minute",
    "passenger_count",
    'trip_distance',
    'trip_time',
    'trip_speed'
]
categorical_feat = [
    "PULocationID",
    "DOLocationID",
    "RatecodeID",
]
features = numeric_feat + categorical_feat
EPS = 1e-7

def preprocess(df, target_col):

   # Basic cleaning
    df = df[df['fare_amount'] > 0].reset_index(drop=True)  # avoid divide-by-zero
    # add target
    df['tip_fraction'] = df['tip_amount'] / df['fare_amount']
    df[target_col] = df['tip_fraction'] > 0.2

    # add features
    df['pickup_weekday'] = df['tpep_pickup_datetime'].dt.weekday
    df['pickup_hour'] = df['tpep_pickup_datetime'].dt.hour
    df['pickup_minute'] = df['tpep_pickup_datetime'].dt.minute
    df['work_hours'] = (df['pickup_weekday'] >= 0) & (df['pickup_weekday'] <= 4) & (df['pickup_hour'] >= 8) & (df['pickup_hour'] <= 18)
    df['trip_time'] = (df['tpep_dropoff_datetime'] - df['tpep_pickup_datetime']).dt.seconds
    df['trip_speed'] = df['trip_distance'] / (df['trip_time'] + EPS)

    # drop unused columns
    df = df[['tpep_dropoff_datetime'] + features + [target_col]]
    df[features + [target_col]] = df[features + [target_col]].astype("float32").fillna(-1.0)

    # convert target to int32 for efficiency (it's just 0s and 1s)
    df[target_col] = df[target_col].astype("int32")

    return df.reset_index(drop=True)

#Importamos data de enero para el training, con la función creada en script import_dataset.py

taxi = load_data(2020,1)

target_col = "high_tip"

taxi_train = preprocess(df=taxi, target_col=target_col)

# tomamos 100.000 primeras filas para entrenar, pues dataset es muy extenso y training puede tardar demasiado
taxi_train = taxi_train.head(100000)

#archivo se alojó en la carpeta data -->raw